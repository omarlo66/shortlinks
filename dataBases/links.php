<?php
require_once 'conn.php';
if(isset($_GET['create_table'])){
    create_links_table();
}
// post method: to add new link
if(isset($_POST['link_id']) && isset($_GET['new'])){
    $link_id = $_POST['link_id'];
    $link = $_POST['link'];
    $source = $_POST['source'];
    $budget = $_POST['budget'];
    $author = $_POST['author'];
    $points = $_POST['points'];
    $points_per_click = $_POST['points_per_click'];
    $clicks = $_POST['clicks'];
    $status = $_POST['status'];
    $date = date('Y-m-d H:i:s');
    // ** add here a function to debit points from user wallet **
    return add_new_link($link_id,$link,$source,$budget,$author,$points,$points_per_click,$clicks,$status,$date);
}

// post method to edit link
if(isset($_POST['id']) && isset($_GET['edit'])){
    // user can only edit budget and link that user will visit after clicking the link
    // ** Note: use link unique id to edit the link id (internal identity)
    $link = $_POST['link'];
    $budget = $_POST['budget'];
    $id = $_POST['id'];
    return update_link($id,$link,$budget);
}
// links table structure
/*
    - id (internal identity)
    - link_id (unique link id) (generated by generate_unique_link_id() function)
    - link (the link to be shortened)
    - source (the source of the link) e.g facebook, twitter, instagram, etc.
    - budget (the amount of points to be spent on the link) and must be in user wallet before creating the link
    - author (the user who created the link)
    - points (the amount of points spent on the link)
    - points_per_click (the amount of points to be given to the user who clicked the link)
    - clicks (the amount of clicks on the link)
    - status (pending, active, deleted)
    - date (the date the link was created)
*/
function create_links_table(){
    global $conn;
    mysqli_query($conn,"CREATE TABLE links IF NOT EXISTS (
        id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
        link_id VARCHAR(30) NOT NULL,
        link VARCHAR(255) NOT NULL,
        source VARCHAR(255) NOT NULL,
        budget INT(6) NOT NULL,
        author INT(6) NOT NULL,
        points INT(6) NOT NULL,
        points_per_click INT(6) NOT NULL,
        clicks INT(6) NOT NULL,
        status VARCHAR(30) NOT NULL,
        date VARCHAR(30) NOT NULL)"
    );
}
function get_unapproved_links(){
    global $conn;
    $query = ("SELECT * FROM links WHERE status = 'pending'");
    $links = mysqli_query($conn,$query);
    if(! $links){
        return array();
    }
    return $links->fetch_all(MYSQLI_ASSOC);
}
function approve_link_status($id){
    global $conn;
    $query = mysqli_query($conn,"UPDATE links SET status='active' WHERE id='$id'");
    $author = get_link('id',$id)->author;
    add_notification_to_user($author,'Your link has been approved');
    return $query;
}
function delete_link_status($id){
    global $conn;
    $link = get_link('id',$id);
    if($link){
        $user_id = $link->author;
        $amount = $link->budget;
        update_points($user_id,$amount);
        $query = mysqli_query($conn,"DELETE FROM links WHERE id='$id'");
        return true;
    }else{
        return false;
    }
    
}
function update_link($id,$url,$budget){
    global $conn;
    $query = mysqli_query($conn,"UPDATE links SET link='$url', budget='$budget', status = 'pending' WHERE id='$id'");
    if($query){
        return 'updated successfully';
    }
    return 'failed to update';
}
function generate_unique_link_id(){
    global $conn;
    $try = 0;
    $id = rand(100000,999999);

    if($try > 10){
        mysqli_query($conn,'DELETE FROM links WHERE status = "deleted"');
    }
    if(mysqli_query($conn,'SELECT * FROM links WHERE link_id = "'.$id.'"') && mysqli_query($conn,'SELECT * FROM links WHERE link_id = "'.$id.'"')->num_rows > 0){
        $try += 1;
        return generate_unique_link_id();
    }elseif(mysqli_query($conn,'SELECT * FROM usermeta WHERE meta_value = "'.$id.'"')->num_rows > 0){
        $try += 1;
        return generate_unique_link_id();
    }else{
        return $id;
    }
}
function link_reported($id){
    global $conn;
    $query = mysqli_query($conn,"UPDATE links SET status = 'reported' WHERE id='$id'");
    return $query;
}
function add_new_link($link_id,$link,$source,$budget,$user_id,$points_per_click){
    global $conn;
    $date = date('Y-m-d H:i:s');
    $author = $user_id;
    $points = 0;
    $clicks = 0;
    $query = mysqli_query($conn,"INSERT INTO links (link_id,link,source,budget,author,points,points_per_click,clicks,status,date) VALUES ('$link_id','$link','$source','$budget','$author','$points','$points_per_click','$clicks','pending','$date')");
    if($query){
        return true;
    }
    return false;
}
function get_links(){
    global $conn;
    $links = mysqli_query($conn,"SELECT * FROM links WHERE status = 'active' ORDER BY budget DESC");
    if(! $links){
        return false;
    }
    return $links->fetch_all(MYSQLI_ASSOC);
}
function link_clicked($link_id){
    global $conn;
    $link = get_link('link_id',$link_id);
    if($link){
        $author = $link->author;
        $points = $link->points_per_click;
        $clicks = $link->clicks;
        $clicks += 1;
        $points += $points;
        $query = mysqli_query($conn,"UPDATE links SET clicks='$clicks', points='$points' WHERE link_id='$link_id'");
        if($query){
            return true;
        }
    }
    return false;
}